/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }


    withName: 'NEAT' {
        
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            pattern: "*.{vcf.gz,bam,yml}" 
        ]
        ext.prefix       = { "${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}_${meta.sample}" }
        ext.args = [
            '--bam',
            '--vcf',
            '--no-fastq',
            '--rng $RANDOM'
        ].join(' ')
    }


    withName: 'BAMSURGEON' {
        
        publishDir = [
            [
                path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}/random_mut" },
                mode: params.publish_dir_mode,
                pattern: "*.txt"
            ],
            [
                path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}/spiked_bam" },
                mode: params.publish_dir_mode,
                pattern: "*.{bam,bai,gz,tbi}"
            ],
            [
                path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
                mode: params.publish_dir_mode,
                pattern: "*.yml"
            ]
        ]
        ext.prefix       = { "${task.process.tokenize(':')[-1].toLowerCase()}_${meta.sample}" }
        ext.args = [
            '--avoidN',
            '-s $RANDOM'
        ].join(' ')
        ext.args2 = [
            '--ignoresnps',
            '--tagreads',
            '--ignorepileup',
            '--mindepth 8',
            '--maxdepth 100',
            '--minmutreads 4',
            '--aligner mem',
            '--seed $RANDOM'
        ].join(' ')
        ext.args3 = [
            '--tagreads',
            '--ignorepileup',
            '--mindepth 8',
            '--maxdepth 100',
            '--minmutreads 4',
            '--aligner mem',
            '--seed $RANDOM'
        ].join(' ')
    }


    withName: 'VARDICTJAVA' {
        publishDir = [
            path: { "${params.outdir}/variant_calling/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            patter: "*.{vcf,tbi,yml}"
        ]
        ext.prefix       = { "${task.process.tokenize(':')[-1].toLowerCase()}_${meta.sample}" }
        ext.args = [
            '--nosv',
            '-F 0x700',
            '-c 1 -S 2 -E 3 -g 4'
        ].join(' ').trim()
    }


    withName: 'GATK4_MUTECT2' {
        publishDir = [
            path: { "${params.outdir}/variant_calling/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            patter: "*.{vcf,tbi,stats,yml}"
        ]
        ext.args = [
            '--pruning-lod-threshold 0',
            '--max-mnp-distance 0',
            '--minimum-allele-fraction 0.0',
            '--tumor-lod-to-emit 0',
            '--min-base-quality-score 20',
            '--read-validation-stringency LENIENT'
        ].join(' ')
    }


    withName: 'VARSCAN2' {
        publishDir = [
            path: { "${params.outdir}/varscan2" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = [
            '-d 0'
        ].join(' ').trim()
        ext.args2 = [
            '--min-var-freq 0.0',
            '--output-vcf'
        ].join(' ')
    }
}